version: '3.8'

services:
  # PostgreSQL with pgvector for philosophical research data
  postgres:
    image: pgvector/pgvector:pg17
    container_name: phil_rag_postgres
    environment:
      POSTGRES_USER: philosopher
      POSTGRES_PASSWORD: password
      POSTGRES_DB: phil_rag
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U philosopher -d phil_rag"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL test database for isolated testing
  postgres_test:
    image: pgvector/pgvector:pg17
    container_name: phil_rag_postgres_test
    environment:
      POSTGRES_USER: philosopher
      POSTGRES_PASSWORD: password
      POSTGRES_DB: phil_rag_test
    ports:
      - "5433:5432"  # Different port for test database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U philosopher -d phil_rag_test"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching philosophical search results
  redis:
    image: redis:7-alpine
    container_name: phil_rag_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for object storage (future: PDF storage)
  minio:
    image: minio/minio:latest
    container_name: phil_rag_minio
    environment:
      MINIO_ROOT_USER: minio_admin
      MINIO_ROOT_PASSWORD: minio_password
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"   # API port
      - "9001:9001"   # Console port
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  default:
    name: phil_rag_network
    driver: bridge